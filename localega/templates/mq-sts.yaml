apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "localega.fullname" . }}-mq
  labels:
    role: broker
    app: {{ template "localega.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "{{ .Values.mq.name }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  revisionHistoryLimit: {{ default "3" .Values.revisionHistory }}
  strategy:
    type: "Recreate"
  serviceName: mq
  selector:
    matchLabels:
      app: {{ template "localega.name" . }}-mq
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "localega.name" . }}-mq
        release: {{ .Release.Name }}
        role: broker
    spec:
      containers:
      - name: mq
        image: "{{ .Values.mq.repository }}:{{ .Values.mq.imageTag }}"
        imagePullPolicy: {{ .Values.mq.imagePullPolicy }}
        command: ["/script/mq.sh"]
        env:
          - name: CEGA_MQ_HOST
            value: {{ if .Values.config.cega_mq_host }}{{ .Values.config.cega_mq_host | quote }}{{ else }}{{ template "cega.fullname" . }}-mq{{ end }}
          - name: CEGA_PORT
            value: {{ .Values.config.cega_port | quote }}
          - name: CEGA_USERNAME
            value: {{ .Values.config.cega_username | quote }}
          - name: CEGA_VHOST
            value: {{ .Values.config.cega_vhost | quote }}
          - name: CEGA_MQ_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "localega.name" . }}-cega-mq-pass
                key: pass
        ports:
        - name: lega-mq
          containerPort: 15672
          protocol: TCP
        - containerPort: {{.Values.mq.port}}
          name: amqp
        volumeMounts:
        - name: mq-entrypoint
          mountPath: /script
        - name: rabbitmq
          mountPath: /etc/rabbitmq
        - name: mq-temp
          mountPath: /temp
      {{- if .Values.mq.metrics.enabled }}
      - name: metrics
        image: "{{ .Values.mq.metrics.repository }}:{{ .Values.mq.metrics.imageTag }}"
        imagePullPolicy: {{ .Values.mq.metrics.imagePullPolicy | quote }}
        env:
        - name: RABBIT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "localega.name" . }}-mq-pass
              key: password
        - name: RABBIT_URL
          value: "http://localhost:15672"
        - name: RABBIT_USER
          value: {{ .Values.config.broker_username | quote }}
        ports:
        - name: metrics
          containerPort: 9090
        livenessProbe:
          httpGet:
            path: /metrics
            port: metrics
          initialDelaySeconds: 15
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /metrics
            port: metrics
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources:
  {{ toYaml .Values.mq.metrics.resources | indent 10 }}
      {{- end }}
      volumes:
      - name: mq-entrypoint
        configMap:
          name: {{ template "localega.name" . }}-mq-entrypoint
          defaultMode: 0744
      - name: mq-temp
        configMap:
            name: {{ template "localega.name" . }}-mq-config
            items:
              - key: defs.json
                path: defs.json
              - key: rabbitmq.config
                path: rabbitmq.config
            defaultMode: 0744
      - name: rabbitmq
{{- if and .Values.persistence.enabled .Values.mq.persistence.existingClaim }}
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Values.mq.persistence.existingClaim | quote }}
  {{- else if not .Values.persistence.enabled }}
      - name: data
        emptyDir: {}
  {{- else if and .Values.persistence.enabled (not .Values.mq.persistence.existingClaim) }}
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app: {{ template "localega.mq.fullname" . }}
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.postgres.persistence.storageSize }}
    {{- if .Values.persistence.storageClass }}
      storageClassName: {{ .Values.persistence.storageClass | quote}}
    {{ end }}
  {{- end -}}
