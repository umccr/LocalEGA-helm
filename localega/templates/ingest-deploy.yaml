apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "localega.ingest.fullname" . }}
  labels:
    app: {{ template "localega.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "{{ .Values.ingest.name }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    role: ingest
spec:
  replicas: {{ .Values.ingest.replicaCount }}
  revisionHistoryLimit: {{ default "3" .Values.revisionHistory }}
  selector:
    matchLabels:
      app: {{ include "localega.name" . }}-ingest
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "localega.name" . }}-ingest
        role: ingest
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: ingest
          image: "{{ .Values.ingest.repository }}:{{ .Values.ingest.imageTag }}"
          imagePullPolicy: {{ .Values.ingest.imagePullPolicy | quote }}
          resources:
{{ toYaml .Values.ingest.resources | indent 10 }}
          env:
          - name: BROKER_CONNECTION_ATTEMPTS
            value: {{ .Values.config.broker_connection_attempts | quote }}
          - name: BROKER_HOST
            value: {{ if .Values.config.broker_host }}{{ .Values.config.broker_host | quote }}{{ else }}{{ template "localega.fullname" . }}-mq{{ end }}
          - name: BROKER_RETRY_DELAY
            value: {{ .Values.config.broker_retry_delay | quote }}
          - name: BROKER_USERNAME
            value: {{ .Values.config.broker_username | quote }}
          - name: BROKER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "localega.name" . }}-mq-pass
                key: password
          - name: LEGA_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "localega.name" . }}-password
                key: password
          - name: POSTGRES_HOST
            value: {{ if .Values.config.postgres_host }}{{ .Values.config.postgres_host | quote }}{{ else }}{{ template "localega.fullname" . }}-db{{ end }}
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "localega.name" . }}-db-secret
                key: postgres_password
          - name: POSTGRES_TRY
            value: {{ .Values.config.postgres_try | quote }}
          - name: POSTGRES_USER
            value: {{ .Values.config.postgres_user | quote }}
          - name: S3_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: {{ template "localega.name" . }}-s3-keys
                key: access_key
          - name: S3_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ template "localega.name" . }}-s3-keys
                key: secret_key
          - name: VAULT_DRIVER
            value: {{ .Values.config.data_storage_type | quote }}
          - name: VAULT_URL
            value: {{ required "A valid .Values.config.data_storage_url entry required!" .Values.config.data_storage_url | quote }}
          volumeMounts:
          - name: inbox
            mountPath: /ega/inbox
      restartPolicy: Always
      volumes:
      - name: inbox
      {{ if .Values.persistence.enabled }}
        {{ if (eq "flexVolume" .Values.inbox.persistence.storageClass) }}
        flexVolume:
          driver: {{ .Values.inbox.persistence.flexVolume.driver | quote }}
          fsType: {{ .Values.inbox.persistence.flexVolume.fsType | quote }}
          options:
            fsName: {{ .Values.inbox.persistence.flexVolume.fsName | quote }}
            clusterNamespace:  {{ .Values.inbox.persistence.flexVolume.clusterNamespace | quote }}
        {{ else if (eq "nfs" .Values.inbox.persistence.storageClass) }}
        source:
          nfs:
            server: {{ if .Values.inbox.persistence.nfs.server }}{{ .Values.inbox.persistence.nfs.server | quote }}{{ end }}
            path: {{ if .Values.inbox.persistence.nfs.path }}{{ .Values.inbox.persistence.nfs.path | quote }}{{ else }}{{ "/" }}{{ end }}
            readOnly: false
        {{ end }}
        {{ if .Values.inbox.existingClaim }}
        persistentVolumeClaim:
          claimName: {{ if .Values.inbox.existingClaim }}{{ .Values.inbox.existingClaim }}{{ else }}{{ template "localega.inbox.fullname" . }}{{ end }}
        {{ end }}
      {{ else}}
        emptyDir: {}
      {{ end }}