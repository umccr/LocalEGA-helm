{{ if .Values.postgres.deploy }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "localega.postgres.fullname" . }}
  labels:
    app: {{ template "localega.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    component: "{{ .Values.postgres.name }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    role: db
spec:
  replicas: {{ .Values.postgres.replicaCount }}
  revisionHistoryLimit: {{ default "3" .Values.revisionHistory }}
  strategy:
    type: "Recreate"
  selector:
    matchLabels:
      app: {{ template "localega.name" . }}-db
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "localega.name" . }}-db
        role: database
        release: {{ .Release.Name }}
    spec:
      containers:
      - name: postgresql
        image: "{{ .Values.postgres.repository }}:{{ .Values.postgres.imageTag }}"
        imagePullPolicy: {{ .Values.postgres.imagePullPolicy | quote }}
        resources:
{{ toYaml .Values.postgres.resources | indent 10 }}
        env:
        - name: POSTGRES_USER
          value: {{ .Values.config.postgres_user }}
        - name: POSTGRES_PASSWORD
          valueFrom:
              secretKeyRef:
                name: {{ template "localega.name" . }}-db-secret
                key: postgres_password
        - name: POSTGRES_DB
          value: {{ .Values.config.postgres_db_name }}
        ports:
        - name: postgres
          containerPort: 5432
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
        - name: initdb
          mountPath: /docker-entrypoint-initdb.d
          readOnly: true
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -h
            - localhost
            - -U
            - {{ .Values.config.postgres_user}}
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -h
            - localhost
            - -U
            - {{ .Values.config.postgres_user}}
          initialDelaySeconds: 5
          timeoutSeconds: 1
      {{- if .Values.postgres.metrics.enabled }}
      - name: metrics
        image: "{{ .Values.postgres.metrics.repository }}:{{ .Values.postgres.metrics.imageTag }}"
        imagePullPolicy: {{ default "" .Values.postgres.metrics.imagePullPolicy | quote }}
        env:
        - name: DATA_SOURCE_NAME
          value: postgresql://{{ default "lega" .Values.postgres.metricsUser }}@127.0.0.1:5432?sslmode=disable
        ports:
        - name: metrics
          containerPort: 9187
        livenessProbe:
          httpGet:
            path: /metrics
            port: metrics
        readinessProbe:
          httpGet:
            path: /metrics
            port: metrics
        resources:
  {{ toYaml .Values.postgres.metrics.resources | indent 10 }}
      {{- end }}
      volumes:
      - name: initdb
        projected:
          sources:
          - configMap:
              name: {{ template "localega.name" . }}-initsql
              items:
              - key: main.sql
                path: 01_main.sql
              - key: download.sql
                path: 02_download.sql
              - key: qc.sql
                path: 03_qc.sql
              - key: ebi.sql
                path: 04_ebi.sql
              - key: grants.sql
                path: 05_grants.sql
      - name: data
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ if .Values.postgres.persistence.existingClaim }}{{ else }}{{ template "localega.postgres.fullname" . }}{{ end }}
      {{- else }}
        emptyDir: {}
      {{- end -}}
{{ end }}