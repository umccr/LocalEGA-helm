# Default values for localega.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

config:
  log: "debug"
  broker_connection_attempts: 30
  broker_enable_ssl: "false"
  broker_heartbeat: 0
  broker_host: "" # defaults to localega-mq
  broker_port: 5672
  broker_retry_delay: 10
  broker_username: "guest" # local broker user
  broker_vhost: "/"
  cega_users_host: # http://cega-users-server-fqdn
  cega_users_endpoint: "/lega/v1/legas/users/%s?idType=username" # "/lega/v1/legas/users/%s?idType=username"
  cega_endpoint_json: "response.result"
  cega_mq_host: "" # FQDN to cega mq host
  cega_vhost: "/"
  cega_port: 5672
  cega_username: "" # cega user
  keyserver_host: "" # defaults to localega-keys
  keyserver_endpoint: "/keys/retrieve/%s/private/bin?idFormat=hex"
  postgres_db_name: "lega"
  postgres_db_schema: "local_ega"
  postgres_host: "" # defaults to localega-db
  postgres_try: 30
  postgres_sslmode: "prefer"
  postgres_user: ""
  res_host: "" # defaults to localega-res
  filedatabase_host: "" # defaults to localega-filedatabase
  dataedge_host: "" # defaults to localega-dataedge
  data_storage_type: "S3Storage" # S3Storage or FileStorege
  data_storage_url: "" # URl to S3 instance
  data_storage_s3_bucket: "lega"
  data_storage_s3_region: "lega"
  data_storage_s3_chunk_size: 4 # Chunk size in MB
  data_storage_location: "/ega/data_archive" # path to data archive volume
  data_storage_mode: 2750

persistence: 
  enabled: true
## Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.

## RevisionHistory
##  If defined, set the revisionHistoryLimit of the deployment, defaults to 3
##  RevisionHistoryLimit is number of old ReplicaSets to retain to allow rollback.
# revisionHistory: 3

secrets:
  cega_creds: ""
  cega_mq_pass: ""
  pgp_passphrase: ""
  shared_pgp_password: ""
  mq_password: ""
  postgres_password: ""
  s3_access_key: ""
  s3_secret_key: ""

dataedge:
  name: dataedge
  repository: cscfi/ega-dataedge
  imageTag: m4
  imagePullPolicy: IfNotPresent
  replicaCount: 1
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "1024Mi"
      cpu: "500m"
  port: 8080
  servicePort: 9059
  debug: 5058
  logpath: "/tmp/logs"

filedatabase:
  name: filedatabase
  repository: cscfi/ega-filedatabase
  imageTag: m4
  imagePullPolicy: IfNotPresent
  replicaCount: 1
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "1024Mi"
      cpu: "500m"
  port: 8080
  servicePort: 9050
  debug: 5050

inbox:
  name: inbox
  repository: nbisweden/ega-inbox
  imageTag: m4
  imagePullPolicy: IfNotPresent
  inboxPath: ""
  replicaCount: 1
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "250m"
  persistence:
    existingClaim: ""
    storageSize: 1Gi
    storageClass: ""
    flexVolume:
      driver: "" #ceph.rook.io/rook
      fsType: "" #ceph
      fsName: "" #sharedfs
      clusterNamespace: "" #rook-ceph
    nfs:
      server: ""
      path: ""
  location: "/ega/inbox" # path to inbox volume
  port: 9000
  service:
    type: ClusterIP
    port: 2222

ingest:
  name: ingest
  replicaCount: 1
  repository: nbisweden/ega-base
  imageTag: m4
  imagePullPolicy: IfNotPresent
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "250m"
## co-locate inbox with ingest
# If the deployment requires the use of hostPath volumes for the shared filesystem
# that is used by inbox and ingest, set coLocateInbox: true
  coLocateInbox: false

keys:
  deploy: true
  name: keys
  repository: cscfi/ega-keyserver
  imageTag: m4
  imagePullPolicy: IfNotPresent
  replicaCount: 1
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "1024Mi"
      cpu: "500m"
  port: 8080
  servicePort: 9095
  debug: 5054

mapper:
  name: mapper
  replicaCount: 1
  repository: nbisweden/ega-base
  imageTag: m4
  imagePullPolicy: IfNotPresent
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "250m"

mq:
  name: mq
  repository: rabbitmq
  imageTag: 3.6-management-alpine
  imagePullPolicy: IfNotPresent
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "250m"
  persistence:
    existingClaim: ""
    storageSize: 1Gi
  port: 5672
  metrics:
    enabled: false
    repository: kbudde/rabbitmq-exporter
    imageTag: v0.29.0
    imagePullPolicy: IfNotPresent
    resources:
      requests:
        memory: 256Mi
        cpu: 100m

postgres:
  deploy: true
  name: db
  repository: postgres
  imageTag: 10-alpine
  imagePullPolicy: IfNotPresent
  persistence:
    existingClaim: ""
    storageSize: 1Gi
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "250m"
  metrics:
    enabled: false
    repository: wrouesnel/postgres_exporter
    imageTag: v0.4.6
    imagePullPolicy: IfNotPresent
    resources:
      requests:
        memory: 256Mi
        cpu: 100m

res:
  name: res
  repository: cscfi/ega-res
  imageTag: m4
  imagePullPolicy: IfNotPresent
  replicaCount: 1
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "1024Mi"
      cpu: "500m"
  port: 8080
  servicePort: 9090
  debug: 5058

verify:
  name: verify
  replicaCount: 1
  repository: nbisweden/ega-base
  imageTag: m4
  imagePullPolicy: IfNotPresent
  resources:
    requests:
      memory: "128Mi"
      cpu: "100m"
    limits:
      memory: "256Mi"
      cpu: "250m"
